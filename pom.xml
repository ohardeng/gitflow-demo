<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>no.hardeng.demo</groupId>
  <artifactId>gitflow-demo</artifactId>
  <version>1.1</version>
  <packaging>jar</packaging>

  <name>gitflow-demo</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m5.1</version>
        <!-- Configuration inspired by http://george-stathis.com/2013/11/09/painless-maven-project-releases-with-maven-gitflow-plugin/ -->
        <configuration>
          <!-- Keep your maven submodules at the same version as the parent POM -->
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <!-- Prevents deployments from dev workstations so that they can be
            done by a CI server -->
          <noDeploy>true</noDeploy>
          <!-- Makes it easy to se where a SNAPSHOT version really belongs -->
          <enableFeatureVersions>true</enableFeatureVersions>
          <releaseBranchVersionSuffix>RC</releaseBranchVersionSuffix>

          <!-- Overriden for hotfix- and release-finish via release-profile -->
          <allowSnapshots>true</allowSnapshots>
          <allowUntracked>true</allowUntracked>

          <!-- Pusing in-development features to origin allows all devs to see
            what each other are working on -->
          <pushFeatures>true</pushFeatures>
          <!-- This allows the CI server (e.g. Jenkins) to automatically push
            new releases to origin; you can then either manually deploy them or, if you
            are doing Continuous Deployments, auto-deploy them to prod -->
          <pushReleases>true</pushReleases>
          <!-- Hot Fixes should be pushed to origin as well so that any dev can
            pick them up -->
          <pushHotfixes>true</pushHotfixes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
        <profile>
      <id>release-profile</id>
      <build>
        <plugins>
          <plugin>
            <groupId>external.atlassian.jgitflow</groupId>
            <artifactId>jgitflow-maven-plugin</artifactId>
            <configuration>
              <allowSnapshots>false</allowSnapshots>
              <allowUntracked>false</allowUntracked>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
